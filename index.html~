
<html>
<head>
<script type="text/javascript" src="https://raw.github.com/arshaw/xdate/master/src/xdate.js"></script>
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>
<script type="text/javascript" src="http://www.owlnet.rice.edu/~jc14/test/datetimepicker.js"></script>
</head>
<body onload="initialize()">
<div id="fb-root"></div>
<script src="http://connect.facebook.net/en_US/all.js">
  </script>
      <script>
        window.fbAsyncInit = function() {
          FB.init({
            appId      : '343358929041322',
            status     : true, 
            cookie     : true,
            xfbml      : true,
            oauth      : true,
          });
      };
      (function(d){
           var js, id = 'facebook-jssdk'; if (d.getElementById(id)) {return;}
          js = d.createElement('script'); js.id = id; js.async = true;
           js.src = "//connect.facebook.net/en_US/all.js";
           d.getElementsByTagName('head')[0].appendChild(js);
         }(document));
    FB.Event.subscribe('auth.login', function () {
          window.location = "http://heyricefbook.appspot.com/";
      });
      </script>

<h1>Hey Rice!</h1>
    <table width="100%">
        <tr width="100%">
            <td width="85%" height="375px">
                <div id="map_canvas" style="width: 100%; height: 100%">
                </div>
            </td>
            </div>
            <td id=curTime width="15%">
                i made a change and commited it to git.
            </td>
        </tr>
    </table>
	<table>
	<tr>
	<td>
	<form>
		<fieldset data-type="horizontal" display=inline name=timeScopeGroup>
		<legend>Time Span</legend>
		<input type=radio name=timeScope value=year checked=true onclick="filterMarkers('time','year')" > Year </label>
		<label> <input type=radio name=timeScope value=month onclick="filterMarkers('time','month')"> Month </label>
		<label> <input type=radio name=timeScope value=week onclick="filterMarkers('time','week')"> Week </label>
		<label> <input type=radio name=timeScope value=day onclick="filterMarkers('time','day')"> Day </label>
		<label> <input type=radio name=timeScope value=hour onclick="filterMarkers('time','hour')" > Hour </label>
		</fieldset>
	</form>
	</td>
	<td>
	<form>
		<fieldset data-type="horizontal" display=inline name=privacyGroup>
		<legend>View Privacy</legend>
		<label> <input onclick="filterMarkers('privacy','public')" type=radio name=privacy value=public> Public </label>
		<label> <input onclick="filterMarkers('privacy','private')" type=radio name=privacy value=private> Private </label>
		<label> <input onclick="filterMarkers('privacy','all')" type=radio name=privacy value=all checked=true> All </label>
		<script type="text/javascript">
		
		function getSelectedRadio(buttonGroup) {
		   // returns the array number of the selected radio button or -1 if no button is selected
		   if (buttonGroup[0]) { // if the button group is an array (one button is not an array)
			  for (var i=0; i<buttonGroup.length; i++) {
				 if (buttonGroup[i].checked) {
					return i
				 }
			  }
		   } else {
			  if (buttonGroup.checked) { return 0; } // if the one button is checked, return zero
		   }
		   // if we get to this point, no radio button is selected
		   return -1;
		} // Ends the "getSelectedRadio" function

			function clearMarkers() {
				if (markers) {
					for (var i = 0; i < markers.length; i++) {
						markers[i].setMap(null);
					}
				}
			}

			function filterMarkers(type,scale){
				clearMarkers();
				var i = 0;
				for(i;i<markers.length;i++){
					var curEvent = markers[i];
					var privacyIndex = getSelectedRadio(document.getElementsByName("privacy"));
					var curPrivacy = document.getElementsByName("privacy")[privacyIndex].value;
					var radioIndex = getSelectedRadio(document.getElementsByName("timeScope"));
					var curScope = document.getElementsByName("timeScope")[radioIndex].value;
					if(curPrivacy == curEvent.privacy || curPrivacy == 'all'){
						
						var curTime = new XDate();
						if(curScope == 'year'){
							if(curEvent.dateObj.diffYears(curTime) > -1 && curEvent.dateObj.diffYears(curTime) < 1){ //within a year{
								curEvent.setMap(map);
								document.getElementsByName("shownStartDate")[0].innerHTML = curTime.clone().addYears(-1);
								document.getElementsByName("shownEndDate")[0].innerHTML = curTime.clone().addYears(1);
							}
						}
						if(curScope == 'month'){
							if(curEvent.dateObj.diffMonths(curTime) > -1 && curEvent.dateObj.diffMonths(curTime) < 1){ //within a year{
								curEvent.setMap(map);
								document.getElementsByName("shownStartDate")[0].innerHTML = curTime.clone().addMonths(-1);
								document.getElementsByName("shownEndDate")[0].innerHTML = curTime.clone().addMonths(1);
							}
						}
						if(curScope == 'week'){
							if(curEvent.dateObj.diffWeeks(curTime) > -1 && curEvent.dateObj.diffWeeks(curTime) < 1){ //within a year{
								curEvent.setMap(map);
								document.getElementsByName("shownStartDate")[0].innerHTML = curTime.clone().addWeeks(-1);
								document.getElementsByName("shownEndDate")[0].innerHTML = curTime.clone().addWeeks(1);
							}
						}
						if(curScope == 'day'){
							if(curEvent.dateObj.diffDays(curTime) > -1 && curEvent.dateObj.diffDays(curTime) < 1){ //within a year{
								curEvent.setMap(map);
								document.getElementsByName("shownStartDate")[0].innerHTML = curTime.clone().addDays(-1);
								document.getElementsByName("shownEndDate")[0].innerHTML = curTime.clone().addDays(1);
							}
						}
						if(curScope == 'hour'){
							if(curEvent.dateObj.diffHours(curTime) > -1 && curEvent.dateObj.diffHours(curTime) < 1){ //within a year{
								curEvent.setMap(map);
								document.getElementsByName("shownStartDate")[0].innerHTML = curTime.clone().addHours(-1);
								document.getElementsByName("shownEndDate")[0].innerHTML = curTime.clone().addHours(1);
							}
						}
					}
				}
			}
		</script>
		
		</fieldset>
	</form>
	</td>
Displaying from <b><span name=shownStartDate>START DATE</span></b> to <b><span name=shownEndDate>END DATE</span></b>
 <p id="userName"></p> 

<script> 
     function displayUser(user) {
       var userName = document.getElementById('userName');
       var greetingText = document.createTextNode('Greetings, '
         + user.name + '.');
   userName.appendChild(greetingText);
     }

     var appID = "343358929041322";
     if (window.location.hash.length == 0) {
       var path = 'https://www.facebook.com/dialog/oauth?';
   var queryParams = ['client_id=' + appID,
     'redirect_uri=' + window.location,
     'response_type=token'];
   var query = queryParams.join('&');
   var url = path + query;
   window.location.href = url;
     } else {
	   var accessToken = window.location.hash.substring(1);
       var path = "https://graph.facebook.com/me?";
   var queryParams = [accessToken, 'callback=displayUser'];
   var query = queryParams.join('&');
   var url = path + query;

   // use jsonp to call the graph
       var script = document.createElement('script');
       script.src = url;
       document.body.appendChild(script);        
	   }

  </script> 

  </body>

<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?&sensor=false">
    </script>
<script type="text/javascript">
    var map;
    function initialize() {
        var myOptions = {
            zoom: 16,
            center: new google.maps.LatLng(29.717821, -95.402561),
            mapTypeId: google.maps.MapTypeId.ROADMAP
        }
        map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);
        google.maps.event.addListener(map, 'click', function (event) {
            placeMarker(event.latLng);
        });
		downloadEvents(new google.maps.LatLng(29.717821, -95.402561));
		var currentDate = new XDate();
		document.getElementById("curTime").innerHTML = currentDate;
		filterMarkers('time','year');
        FB.login(function(response) {
   if (response.authResponse) {
     console.log('Welcome!  Fetching your information.... ');
     FB.api('/me', function(response) {
       console.log('Good to see you, ' + response.name + '.');
     });
   } else {
     console.log('User cancelled login or did not fully authorize.');
   }
 }, {scope: 'user_events'});
	}

	//var otherEventInfoWindow;
	var eventsList;
	function getEventByName(name){
		var i;
		for(i;i<eventsList.length;i++){
			if(eventsList[i].name == name){
				return eventsList[i];
			}
		}
		return -1;
	}
	var markers=[];
	function createMarker(pos, t,html) {
    var marker = new google.maps.Marker({       
        position: pos, 
        map: map,  // google.maps.Map 
        title: t,
		html: '',
		privacy: '',
		description: '',
		time: '',
		dateObj: ''
    }); 
	markers.push(marker);
    google.maps.event.addListener(marker, 'click', function() { 
		var displayString = "";
		displayString += "Event Name: "+this.title+"</br>";
		displayString += "Event Description: "+this.description+"</br>";
		displayString += "Event Privacy Settings: "+this.privacy+"</br>";
		displayString += "Event Time: "+this.time+"</br>";
		otherEventsInfoWindow.setContent(displayString);
		otherEventsInfoWindow.open(map, this);
    }); 
    return marker;  
}
	/* now inside your initialise function */
otherEventsInfoWindow = new google.maps.InfoWindow({
content: "holding..."
});
	function downloadEvents(location){
		var eventXhr = new XMLHttpRequest();
		eventXhr.onreadystatechange=function()
		{
			if (eventXhr.readyState==4 && eventXhr.status==200){
				//alert(eventXhr.responseText);
				eventsList = JSON.parse(eventXhr.responseText);
				var i = 0;
				for(i;i<eventsList.length;i++){
					var curEvent = eventsList[i];
					var eventMarker = createMarker(new google.maps.LatLng(curEvent.latitude, curEvent.longitude),curEvent.name,curEvent.html);
					eventMarker.privacy = curEvent.privacy;
					eventMarker.description = curEvent.description;
					eventMarker.time = curEvent.time;
					var xDate = new XDate(curEvent.time);
					eventMarker.dateObj = xDate;
				}
				
				
			}
		}
		eventXhr.open("GET","/getEvents",true);
		eventXhr.send();
	}
	
    /*Marker code weee*/
    var marker;
    function placeMarker(location) {
        var titleString = "Lat: " + location.lat() + ", Lng: " + location.lng();
        if (marker) {
            marker.setPosition(location);
            marker.setAnimation(google.maps.Animation.DROP);
            marker.setTitle(titleString);
			infowindow.close();
        } else {

            /*Make new markers here*/
            marker = new google.maps.Marker({
                position: location,
                map: map,
                animation: google.maps.Animation.DROP,
                draggable: true,
                title: titleString
            });
			markers.push(marker);
            google.maps.event.addListener(marker, 'click', function (event) {
                toggleBounce();
				infowindow.open(map,marker);
				document.getElementsByName("markerLat")[0].value = event.latLng.lat();
				document.getElementsByName("markerLng")[0].value = event.latLng.lng();
            });
            google.maps.event.addListener(marker, 'dragend', function (event) {
                markerDragEnd(marker, event);
            });
			
        }
    }
	/*
	var markerPopupHTML = '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">'+
'<html xmlns="http://www.w3.org/1999/xhtml" >'+
'<head>'+
    '<title>Marker HTML</title>'+
    '<form>'+
 '<p><label>Event name: <input name=event_name></label></p>'+
 '<fieldset>'+
'  <legend>Privacy</legend>'+
  '<p><label> <input type=radio name=size> Private </label></p>'+
  '<p><label> <input type=radio name=size> Public </label></p>'+
 '</fieldset>'+
 '<fieldset>'+
'  <legend> Event Tags </legend>'+
  '<p><label> <input name=tags type=checkbox> Food </label></p>'+
  '<p><label> <input name=tags type=checkbox> Drinking </label></p>'+
  '<p><label> <input name=tags type=checkbox> Lecture </label></p>'+
  '<p><label> <input name=tags type=checkbox> Free </label></p>'+
 '</fieldset>'+
 '<input type="date" />'+
 '<input type="time" />'+
'</form>'+
'</head>'+
'<body>'+
''+
'</body>'+
'</html>'+
'';
*/
var markerPopupHTML;
var infowindow;
var markerXhr = new XMLHttpRequest();
markerXhr.onreadystatechange=function()
  {
  if (markerXhr.readyState==4 && markerXhr.status==200)
    {
    markerPopupHTML=markerXhr.responseText;
	infowindow = new google.maps.InfoWindow({
		content: markerPopupHTML
	});
    }
  }
markerXhr.open("POST","/getMarkerPopup",true);
markerXhr.send();
    function markerDragEnd(marker, event) {
        var titleString = "Lat: " + event.latLng.lat() + ", Lng: " + event.latLng.lng();
        marker.setTitle(titleString);
    }

	function updateLatLng(){
		document.getElementsByName("markerLat")[0].value = marker.getPosition().lat();
		document.getElementsByName("markerLng")[0].value = marker.getPosition().lng();
		//Also gonna validate some stuff.
		var checkDate = new XDate(document.getElementsByName("datetime")[0].value);
		if(checkDate.valid() == false){
			return false;
		}
		return true;
	}
    function toggleBounce() {
        if (marker.getAnimation() != null) {
            marker.setAnimation(null);
        } else {
            marker.setAnimation(google.maps.Animation.BOUNCE);
        }
    }
	

    </script>
<?php
require 'fb-sdk/src/facebook.php';
$facebook = new Facebook(array(
    'appId'  => 'change_to_you_app_id',
    'secret' => 'change_to_you_app_secret',
    'cookie' => true, // enable optional cookie support
));
$fql    =   "SELECT name, pic, start_time, end_time, location, description 
            FROM event WHERE eid IN ( SELECT eid FROM event_member WHERE uid = 221167777906963 ) 
            ORDER BY start_time asc";
            
$param  =   array(
'method'    => 'fql.query',
'query'     => $fql,
'callback'  => ''
);

$fqlResult   =   $facebook->api($param);


//looping through retrieved data
foreach( $fqlResult as $keys => $values ){
    //see here for the date format I used
    //The pattern string I used 'l, F d, Y g:i a'
    //will output something like this: July 30, 2015 6:30 pm

    //getting 'start' and 'end' date,
    //'l, F d, Y' pattern string will give us
    //something like: Thursday, July 30, 2015
    $start_date = date( 'l, F d, Y', $values['start_time'] );
    $end_date = date( 'l, F d, Y', $values['end_time'] );

    //getting 'start' and 'end' time
    //'g:i a' will give us something
    //like 6:30 pm
    $start_time = date( 'g:i a', $values['start_time'] );
    $end_time = date( 'g:i a', $values['end_time'] );

    //printing the data
    echo "<div class='event'>";
    echo "<div style='float: left; margin: 0 8px 0 0;'>";
        echo "<img src={$values['pic']} />";
    echo "</div>";
    echo "<div style='float: left;'>";
        echo "<div style='font-size: 26px'>{$values['name']}</div>";
        if( $start_date == $end_date ){
            //if $start_date and $end_date is the same
            //it means the event will happen on the same day
            //so we will have a format something like:
            //July 30, 2015 - 6:30 pm to 9:30 pm
            echo "<div>on {$start_date} - {$start_time} to {$end_time}</div>";
        }else{
            //else if $start_date and $end_date is NOT the equal
            //it means that the event will will be
            //extended to another day
            //so we will have a format something like:
            //July 30, 2013 9:00 pm to Wednesday, July 31, 2013 at 1:00 am
            echo "<div>on {$start_date} {$start_time} to {$end_date} at {$end_time}</div>";
        }
        echo "<div>Location: " . $values['location'] . "</div>";
        echo "<div>More Info: " . $values['description'] . "</div>";
    echo "</div>";
    echo "<div style='clear: both'></div>";
    echo "</div>";
    
}

?>
</html>
